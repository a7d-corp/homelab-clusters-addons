apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      version: '<75.0.0'
  interval: 10m0s
  releaseName: kube-prometheus-stack
  values:
    crds:
      upgradeJob:
        enabled: true
    defaultRules:
      create: true
      rules:
        kubeProxy: false
        windows: false
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ${STORAGE_CLASS}
              resources:
                requests:
                  storage: 20Gi
      config:
        receivers:
          - name: "pagerduty"
            pagerduty_configs:
              - service_key: ${ALERTMANAGER_PAGERDUTY_INTEGRATION_KEY}
                url: "https://events.eu.pagerduty.com/generic/2010-04-15/create_event.json"
        route:
          group_by: ['alertname']
          receiver: pagerduty
          routes:
            - receiver: pagerduty
      ingress:
        enabled: true
        ingressClassName: ${INGRESS_CLASS}
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
          external-dns.alpha.kubernetes.io/hostname: alertmanager.${FQDN_BASE}
          external-dns.alpha.kubernetes.io/target: ${EXTERNAL_FQDN_TARGET}
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/auth-signin: ${OAUTH_A7D_START}
          nginx.ingress.kubernetes.io/auth-url: ${OAUTH_A7D_AUTH}
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        hosts:
          - alertmanager.${FQDN_BASE}
        paths:
          - /
        pathType: ImplementationSpecific
        tls:
          - secretName: alertmanager-general-tls
            hosts:
              - alertmanager.${FQDN_BASE}
    grafana:
      defaultDashboardsTimezone: "Europe/London"
      envFromSecret: grafana-oauth-secrets
      admin:
        existingSecret: grafana-admin-credentials
      sidecar:
        dashboards:
          enabled: true
          label: "additional-grafana-dashboard"
          labelValue: ""
          searchNamespace: 'monitoring'
          provider:
            name: sidecarProvider
            orgid: 1
            folder: ''
            type: file
            disableDelete: false
            allowUiUpdates: true
            foldersFromFilesStructure: false
      grafana.ini:
        auth.github:
          enabled: true
          client_id: $__env{GRAFANA_GITHUB_CLIENT_ID}
          client_secret: $__env{GRAFANA_GITHUB_CLIENT_SECRET}
          allowed_organizations: ['a7d-corp', 'simonweald']
          role_attribute_path: "[login=='glitchcrab'][0] && 'GrafanaAdmin' || 'Viewer'"
          allow_sign_up: false
          auth_url: https://github.com/login/oauth/authorize
          token_url: https://github.com/login/oauth/access_token
          api_url: https://api.github.com/user
      ingress:
        enabled: true
        ingressClassName: ${INGRESS_CLASS}
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
          external-dns.alpha.kubernetes.io/hostname: grafana.${FQDN_BASE}
          external-dns.alpha.kubernetes.io/target: ${EXTERNAL_FQDN_TARGET}
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/auth-signin: ${OAUTH_A7D_START}
          nginx.ingress.kubernetes.io/auth-url: ${OAUTH_A7D_AUTH}
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        hosts:
          - grafana.${FQDN_BASE}
        path: /
        tls:
          - secretName: grafana-general-tls
            hosts:
              - grafana.${FQDN_BASE}
    kubeProxy:
      enabled: false
    kube-state-metrics:
      extraArgs:
        - --custom-resource-state-only=true
      rbac:
        extraRules:
          - apiGroups:
              - source.toolkit.fluxcd.io
              - kustomize.toolkit.fluxcd.io
              - helm.toolkit.fluxcd.io
              - notification.toolkit.fluxcd.io
              - image.toolkit.fluxcd.io
            resources:
              - gitrepositories
              - buckets
              - helmrepositories
              - helmcharts
              - ocirepositories
              - kustomizations
              - helmreleases
              - alerts
              - providers
              - receivers
              - imagerepositories
              - imagepolicies
              - imageupdateautomations
            verbs: [ "list", "watch" ]
      customResourceState:
        enabled: true
        config:
          spec:
            resources:
              - groupVersionKind:
                  group: kustomize.toolkit.fluxcd.io
                  version: v1
                  kind: Kustomization
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux Kustomization resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, lastAppliedRevision ]
                      source_name: [ spec, sourceRef, name ]
              - groupVersionKind:
                  group: helm.toolkit.fluxcd.io
                  version: v2
                  kind: HelmRelease
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux HelmRelease resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, history, "0", chartVersion ]
                      chart_name: [ status, history, "0", chartName ]
                      chart_app_version: [ status, history, "0", appVersion ]
                      chart_ref_name: [ spec, chartRef, name ]
                      chart_source_name: [ spec, chart, sourceRef, name ]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1
                  kind: GitRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux GitRepository resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, artifact, revision ]
                      url: [ spec, url ]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1
                  kind: Bucket
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux Bucket resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, artifact, revision ]
                      endpoint: [ spec, endpoint ]
                      bucket_name: [ spec, bucketName ]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1
                  kind: HelmRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux HelmRepository resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, artifact, revision ]
                      url: [ spec, url ]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1
                  kind: HelmChart
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux HelmChart resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, artifact, revision ]
                      chart_name: [ spec, chart ]
                      chart_version: [ spec, version ]
              - groupVersionKind:
                  group: source.toolkit.fluxcd.io
                  version: v1beta2
                  kind: OCIRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux OCIRepository resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      revision: [ status, artifact, revision ]
                      url: [ spec, url ]
              - groupVersionKind:
                  group: notification.toolkit.fluxcd.io
                  version: v1beta3
                  kind: Alert
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux Alert resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      suspended: [ spec, suspend ]
              - groupVersionKind:
                  group: notification.toolkit.fluxcd.io
                  version: v1beta3
                  kind: Provider
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux Provider resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      suspended: [ spec, suspend ]
              - groupVersionKind:
                  group: notification.toolkit.fluxcd.io
                  version: v1
                  kind: Receiver
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux Receiver resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      webhook_path: [ status, webhookPath ]
              - groupVersionKind:
                  group: image.toolkit.fluxcd.io
                  version: v1beta2
                  kind: ImageRepository
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux ImageRepository resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      image: [ spec, image ]
              - groupVersionKind:
                  group: image.toolkit.fluxcd.io
                  version: v1beta2
                  kind: ImagePolicy
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux ImagePolicy resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      source_name: [ spec, imageRepositoryRef, name ]
              - groupVersionKind:
                  group: image.toolkit.fluxcd.io
                  version: v1beta2
                  kind: ImageUpdateAutomation
                metricNamePrefix: gotk
                metrics:
                  - name: "resource_info"
                    help: "The current state of a Flux ImageUpdateAutomation resource."
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          name: [ metadata, name ]
                    labelsFromPath:
                      exported_namespace: [ metadata, namespace ]
                      ready: [ status, conditions, "[type=Ready]", status ]
                      suspended: [ spec, suspend ]
                      source_name: [ spec, sourceRef, name ]
    nodeExporter:
      operatingSystems:
        aix:
          enabled: false
        darwin:
          enabled: false
    prometheus:
      prometheusSpec:
        podMonitorNamespaceSelector: {}
        podMonitorSelector: {}
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ${STORAGE_CLASS}
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
      ingress:
        enabled: true
        ingressClassName: ${INGRESS_CLASS}
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
          external-dns.alpha.kubernetes.io/hostname: prometheus.${FQDN_BASE}
          external-dns.alpha.kubernetes.io/target: ${EXTERNAL_FQDN_TARGET}
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/auth-signin: ${OAUTH_A7D_START}
          nginx.ingress.kubernetes.io/auth-url: ${OAUTH_A7D_AUTH}
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        hosts:
          - prometheus.${FQDN_BASE}
        paths:
          - /
        pathType: ImplementationSpecific
        tls:
          - secretName: prometheus-general-tls
            hosts:
              - prometheus.${FQDN_BASE}
